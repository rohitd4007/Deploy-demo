{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data-servive.service.ts","webpack:///src/app/recipe-home-page/recipe-home-page.component.ts","webpack:///src/app/recipe-home-page/recipe-home-page.component.html","webpack:///src/app/recipe.service.ts","webpack:///src/app/team-detail.service.ts","webpack:///src/app/team/team.component.ts","webpack:///src/app/team/team.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","collection","i","Obj","push","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DataServiveService","providedIn","RecipeHomePageComponent","serv","dataService","_router","color","active","ischek","ii","s1","value","name","item","element","target","checked","console","log","Name","a","splice","indexOf","dataFromService","navigate","getData","subscribe","msg","image","pp","RecipeService","http","get","TeamDetailService","TeamComponent","images","isWinner","issel","teamData","Math","floor","random","undefined","aa","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { TeamComponent } from './team/team.component';\nimport { RecipeHomePageComponent } from './recipe-home-page/recipe-home-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [{ path: 'home', component: RecipeHomePageComponent },\n{path:'team',component:TeamComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'HackedRecipe';\n\n\ncollection = [];\nconstructor(){\nfor(let i=1;i<=100;i++){\nlet Obj = {'name': `Employee Name ${i}`,'code': `EMP00 ${i}`}\nthis.collection.push(Obj);\n}\n}\n}\n","<div>\r\n    <img class=\"ills2\" src=\"../assets/Illustration2.png\" alt=\"il2\">\r\n\r\n    <!-- <div class=\"main\">\r\n        <div class=\"container\"> -->\r\n    <router-outlet></router-outlet>\r\n    <!-- </div>\r\n    </div> -->\r\n\r\n    <!-- <img class=\"ills3\" src=\"../assets/Illustration3.png\" alt=\"il2\">\r\n\r\n    <div class=\"illimg\">\r\n        <img class=\"ills1\" src=\"../assets/Illustration1.png\" alt=\"il2\">\r\n        <div>\r\n            <div>\r\n                <img class=\"ills5\" src=\"../assets/Illustration5.png\" alt=\"il2\">\r\n            </div>\r\n            <img class=\"ills4\" src=\"../assets/Illustration4.png\" alt=\"il2\">\r\n        </div>\r\n    </div> -->\r\n</div>\r\n<!-- \r\n<ul>\r\n    <li> Emp Name | Emp code</li>\r\n    <li *ngFor=\"let item of collection | paginate:{itemsPerPage: 5,\r\n        currentPage:p}\">{{item.name}} | {{item.code}}</li>\r\n</ul>\r\n<pagination-controls (pageChange)=\"p=$event\"></pagination-controls> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipeHomePageComponent } from './recipe-home-page/recipe-home-page.component';\nimport { TeamComponent } from './team/team.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport {FormsModule} from '@angular/forms';    \n\n\n\n@NgModule({\n  declarations: [AppComponent, RecipeHomePageComponent, TeamComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule,NgxPaginationModule,FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiveService {\n\n  constructor() { }\n\n  dataFromService;\n}\n","import { DataServiveService } from './../data-servive.service';\nimport { RecipeService } from './../recipe.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-recipe-home-page',\n  templateUrl: './recipe-home-page.component.html',\n  styleUrls: ['./recipe-home-page.component.scss']\n})\nexport class RecipeHomePageComponent implements OnInit {\nimage;\ncolor='black';\nactive=true;\nischek=0;\nii=[];\ns1=[];\n\n\nname:string\nshowNextComponent(value:string) {\n    this.name = value;\n  }\n\n\n\n\n  constructor(private serv:RecipeService,\n    private dataService:DataServiveService,\n    private _router:Router\n\n   ) { }\n\n  click(){\n    // alert(\"clicked\")\n    \n    this.active=!this.active\n    \n    \n  }\n\n  check(item,element){\n\n\n  \n//  console.log(element.target.checked);\nif(element.target.checked==true){\n  console.log(item.Name) \n  this.s1.push(item);\n  this.ischek+=1;  \n}\nelse{\n  if(element.target.checked==false){\n    // console.log(item.Name) \n    // console.log(this.s1.pop().Name)\n    // if(item.Name==this.s1.pop().Name)\n    // console.log(this.s1.indexOf(item.Name))\n    for(var a of this.s1){\n      if(a.Name==item.Name){\n        this.s1.splice(this.s1.indexOf(a),1)\n      }\n\n      \n    }\n  }\n}\n\n    \n    // if(element.target.checked==true)\n    //   this.ischek+=1;\n    // else\n    //   this.ischek-=1;\n\n    // if(this.ischek==2)\n    //   document.getElementById(\"ischeck\").innerHTML=\"selected\";\n    // else if(this.ischek>2)\n    //   document.getElementById(\"ischeck\").innerHTML=\"You cant select more than 2 team\";\n    // else\n    //   document.getElementById(\"ischeck\").innerHTML=\"selected one more team\";\n\n\n  }\n\n\n\n  pp(){\n    \n      \n      this.dataService.dataFromService = this.s1;\n      this._router.navigate(['team']);\n       }\n  ngOnInit(): void {\n\n\n\n    this.serv.getData().subscribe(\n      msg=>{\n        for(var i in msg){\n          // console.log()\n          this.image=msg\n          this.ii.push(msg[i][\"Profile Image\"])\n\n        }   \n      }\n    )\n\n  }\n\n}\n","<div class=\"head\">\n    <div class=\"searchbox\">\n\n        <img src=\"../../assets/Icon feather-search.png\" alt=\"searchicon\" class=\"searchicon\" />\n        <span>Search Your Favourite Recipe...</span>\n    </div>\n    <div class=\"title\">\n        <p style=\"margin: 0 0 -20px 112px ;\">category</p>\n        <h2>Pizza & Noodles</h2>\n    </div>\n\n\n\n\n\n    <div>\n        <div class=\"cards\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>SELECT</th>\n                        <th>PLAYER NAME </th>\n                        <th>LEVEL </th>\n                        <th>AVTAR</th>\n                        <th>BET</th>\n                        <th>WINS</th>\n                        <th>LOST</th>\n                        <th>PRICE</th>\n                    </tr>\n                </thead>\n\n                <tbody cellpadding=\"0\" cellspacing=\"0\" *ngFor=\"let item of\n                    image; let i=index\">\n                    <tr class=\"border\">\n                        <td> <input id=\"check\" (change)=\"check(item,$event)\" type=\"checkbox\" class=\"checkbox\"></td>\n                        <td>{{item.Name}}</td>\n                        <td>5</td>\n                        <td><img class=\"pimage\" src=\"{{ii[i]}}\" alt=\"pic\"></td>\n                        <td>{{item.Bet}}</td>\n                        <td>7</td>\n                        <td>5</td>\n                        <td>{{item.Price}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"sidebar\">\n            <div *ngFor=\"let ss of s1\">\n                {{ss.Name}}-{{ss.wins}}\n\n            </div>\n            <button (click)=\"pp()\">START</button>\n        </div>\n\n    </div>\n\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <div class=\"menu_img\" *ngFor=\"let item of image\">\n    <div>\n        <p>{{item.id}}</p>\n        <div>\n            <div class=\"like-tap\">\n                <img [style.background-color]=\"color\" src=\"../../assets/heart.svg\" alt=\"like\" class=\"heart\" />\n            </div>\n            <a (click)=\"click()\"> <img class=\"ii\" src=\"{{item.Image}}\" alt=\"pic\"> </a>\n            <p class=\"gname\">{{item.name}}</p>\n        </div>\n    </div>\n</div> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { getLocaleDateFormat } from '@angular/common';\nimport { observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get('https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamDetailService {\n\n  constructor(private http:HttpClient) { }\n\n  getTeam(){\n    return this.http.get('https://s3-ap-southeast-1.amazonaws.com/he-public-data/Leaderboard_Initial_Dataset65148c7.json')\n  }\n}\n","import { DataServiveService } from './../data-servive.service';\nimport { element } from 'protractor';\nimport { TeamDetailService } from './../team-detail.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.scss']\n})\nexport class TeamComponent implements OnInit  {\n  title = 'simple pagination demo';\n  images=[];\n  isWinner=0;\n  issel=false;\n  teamData=[];\n\n \nconstructor(private serv:TeamDetailService,\n  private dataService:DataServiveService,\n  private http:HttpClient,\n  private _router:Router){}\n\n\n  random() {\n    return Math.floor(Math.random() * 3);\n  }\n\n  ngOnInit(): void {\n    console.log(this.random());\n    this.isWinner=this.random();\n    this.teamData=this.dataService.dataFromService;\n    console.log(this.dataService.dataFromService);\n    if(this.dataService.dataFromService===undefined){\n      this._router.navigate(['home']) \n    }\n\n  \n    for(var aa in this.dataService.dataFromService)\n    this.images.push(this.dataService.dataFromService[aa]['Profile Image'])\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n// check(item,element){\n//     if(element.target.checked==true){\n//       console.log(item.team_name) \n//       this.teamData.push(item);\n//       this.ischek+=1;\n//     }\n      \n//     else\n//       this.ischek-=1;\n//     if(this.ischek==2){\n//       document.getElementById(\"ischeck\").innerHTML=\"selected\";\n//       this.issel=true;\n//     }\n//     else if(this.ischek>2)\n//     alert(\"you can't select More than 2 team\");\n//     else\n//       document.getElementById(\"ischeck\").innerHTML=\"selected one more team\";\n// }\n  \n}\n\n\n","<div class=\"outerdiv\">\n    <div class=\"cards\">\n        <div class=\"aa\" *ngFor=\"let item of teamData;let i=index\">\n            <img src=\"{{images[i]}}\" alt=\"\" [ngClass]=\"{greenClass:\n                i==isWinner}\" />\n            <p>{{item.Name}}</p>\n            <p>{{i}}</p>\n            <p *ngIf=\"\">Winner</p>\n\n        </div>\n\n\n    </div>\n\n\n\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}